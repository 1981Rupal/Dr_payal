version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: hospital_crm_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: hospital_crm
      POSTGRES_USER: hospital_user
      POSTGRES_PASSWORD: hospital_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - hospital_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hospital_user -d hospital_crm"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: hospital_crm_app
    restart: unless-stopped
    environment:
      # Database
      DATABASE_URL: postgresql://hospital_user:hospital_password_2024@db:5432/hospital_crm

      # Flask
      FLASK_ENV: production
      SECRET_KEY: your-super-secret-key-change-in-production-2024

      # File uploads
      UPLOAD_FOLDER: /app/uploads
      MAX_CONTENT_LENGTH: 16777216  # 16MB

      # Security
      SESSION_COOKIE_SECURE: "false"
      SESSION_COOKIE_HTTPONLY: "true"
      SESSION_COOKIE_SAMESITE: "Lax"

      # Feature flags (disabled by default)
      ENABLE_WHATSAPP: "false"
      ENABLE_CHATBOT: "false"
      ENABLE_ONLINE_CONSULTATION: "false"
      ENABLE_PAYMENT_GATEWAY: "false"
      ENABLE_EMAIL_NOTIFICATIONS: "false"
      ENABLE_SMS_NOTIFICATIONS: "false"

    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - hospital_network
    healthcheck:
      test: ["CMD", "python3", "/usr/local/bin/health_check.py"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local

networks:
  hospital_network:
    driver: bridge
